<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!--对com.lssj.zmn.server.app包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.lssj.zmn.server.app"/>
    <context:property-placeholder location="classpath:application.properties"/>
    <!-- 激活annotation功能 -->
    <context:annotation-config/>
    <!-- 激活annotation功能 -->
    <context:spring-configured/>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <!-- 定义无Controller的path<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:/"/>

    <!-- 静态资源访问 -->
    <!--如果webapp下新建了文件夹，想访问里面的静态资源，那么就要在这配置一下-->
    <mvc:resources mapping="/images/**" location="images/"/>
    <mvc:resources mapping="/css/**" location="css/"/>
    <mvc:resources mapping="/libs/**" location="libs/"/>
    <mvc:resources mapping="/scripts/**" location="scripts/"/>


    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
    </bean>

    <!-- 配置视图解析器，把控制器的逻辑视频映射为真正的视图 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="springAppContext" class="com.lssj.zmn.server.app.context.SpringAppcontextHolder"/>


    <!--######################### RabbitMQ配置 #########################-->
    <!-- 连接服务配置 如果MQ服务器在远程服务器上，请新建用户用新建的用户名密码  guest默认不允许远程登录-->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}" username="${rabbitmq.username}"
                               password="${rabbitmq.password}" port="${rabbitmq.port}"/>
    <!-- 配置admin，自动根据配置文件生成交换器和队列，无需手动配置 -->
    <rabbit:admin id="rabbitAdmin" connection-factory="connectionFactory"/>

    <!-- queue 队列声明 -->
    <rabbit:queue id="${rabbitmq.queue}" name="${rabbitmq.queue}" durable="true" auto-delete="false"
                  exclusive="false" declared-by="rabbitAdmin"/>

    <!-- exchange 交换机 绑定 queue-->
    <rabbit:direct-exchange name="${rabbitmq.queue}_exchange" durable="true" auto-delete="false"
                            declared-by="rabbitAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="${rabbitmq.queue}" key="${rabbitmq.queue}_routingkey"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- spring template声明 -->
    <rabbit:template id="amqpTemplate" exchange="${rabbitmq.queue}_exchange" connection-factory="connectionFactory"/>

    <!-- 配置消息监听者 -->
    <bean id="amqpMessageListener" class="com.lssj.zmn.server.app.service.rabbitmq.AmqpMessageListener"/>

    <!-- queues 监听队列，多个用逗号分隔 ,ref 监听器-->　
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="${rabbitmq.queue}" ref="amqpMessageListener"/>
    </rabbit:listener-container>

</beans>